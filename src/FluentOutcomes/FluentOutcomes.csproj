<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net5.0;net6.0</TargetFrameworks>
    <Nullable>enable</Nullable>
    <RootNamespace>FluentOutcomes</RootNamespace>
    <AssemblyName>FluentOutcomes</AssemblyName>
    <PackageId>FluentOutcomes</PackageId>
    <Description>A lightweight wrapper return type object with declarative and fluent if-else statement for .NET</Description>
    <Version>2.1.0-beta</Version>
    <PackageReleaseNotes>
    v2.1.0-beta
      - ADDED: Add delegate (parameter) support of boolean operation and Return() clause.
      - ADDED: Add option to overwrite the default! on Return() clause.
      - ADDED: Add net5.0 backward compatibility.
    v2.0.1
      - Just patched things up.
    v2.0.0
      - BREAKING CHANGES: Expect() no longer chained to immediate return.
      - REMOVED: Success() and Failure()
      - ADDED: Add Ok() and Fail().
      - ADDED: Add chained logic Or(), OrNot(), And() and AndNot() clause.
      - ADDED: Add FailureIfNot() and SuccessIf() clause.
    v1.2.0
      - BREAKING CHANGES: WithError() clause is now chained Otherwise() clause instead.
      - ADDED: Add Otherwise() clause after WithError() to indicate success.
      - FIXED: FailureIf clause boolean negation.
    v1.1.0
      - ADDED: Add immediate return.
    v1.0.0
      - Initial release.
	  </PackageReleaseNotes>
    <Authors>Taufan Augusta</Authors>
    <Copyright>Copyright 2022 (c) Taufan Augusta. All rights reserved.</Copyright>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageTags>lightweight, wrapper, result, error-handling, fluent-api</PackageTags>
    <PackageProjectUrl>https://github.com/einharan/FluentOutcomes</PackageProjectUrl>
    <RepositoryType>git</RepositoryType>
    <RepositoryURL>https://github.com/einharan/FluentOutcomes</RepositoryURL>
  </PropertyGroup>
</Project>
