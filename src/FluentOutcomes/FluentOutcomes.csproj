<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net6</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <RootNamespace>FluentOutcomes</RootNamespace>
    <AssemblyName>FluentOutcomes</AssemblyName>
    <PackageId>FluentOutcomes</PackageId>
    <Description>A lightweight wrapper return type object with fluent-api if-else statement for .NET</Description>
    <Version>1.2.0</Version>
    <PackageReleaseNotes>
      v1.2.0
		    - BREAKING CHANGES: WithError clause is now chained Otherwise clause instead.
        - ADDED: Add Otherwise clause after WithError to indicate success.
        - FIXED: FailureIf clause boolean negation.
      v1.1.0
		    - ADDED: Add immediate return.
      v1.0.0
		    - Initial release.
	  </PackageReleaseNotes>
    <Authors>Taufan Augusta</Authors>
    <Copyright>Copyright 2022 (c) Taufan Augusta. All rights reserved.</Copyright>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageTags>lightweight, wrapper, result, error-handling, fluent-api</PackageTags>
    <PackageProjectUrl>https://github.com/einharan/FluentOutcomes</PackageProjectUrl>
    <RepositoryType>git</RepositoryType>
    <RepositoryURL>https://github.com/einharan/FluentOutcomes</RepositoryURL>
  </PropertyGroup>
</Project>
